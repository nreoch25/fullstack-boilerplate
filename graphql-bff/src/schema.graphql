type User {
  _id: ID!
  name: String!
  email: String!
}

type Auth {
  success: Boolean!
  token: String
  error: String
}

type Message {
  _id: ID!
  sender: String!
  receiver: String!
  text: String!
}

type SuccessMessage {
  message: String!
}

type Query {
  me: User
  users: [User]!
  protected: SuccessMessage!
  messages(user: String!): [Message]!
}

type Mutation {
  register(input: registerInput!): Auth!
  login(input: loginInput!): Auth!
  logout: SuccessMessage!
  createMessage(input: createMessageInput!): Message!
}

type Subscription {
  newMessage(user: String!): Message!
}

input registerInput {
  name: String!
  email: String!
  password: String!
}

input loginInput {
  email: String!
  password: String!
}

input createMessageInput {
  sender: String!
  receiver: String!
  text: String!
}
